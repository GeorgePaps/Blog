<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Articles on George Paps Blog</title>
        <link>https://georgepaps.pages.dev/categories/articles/</link>
        <description>Recent content in Articles on George Paps Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 27 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://georgepaps.pages.dev/categories/articles/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Glimpses of Computer Vision (Draft)</title>
        <link>https://georgepaps.pages.dev/post/computervision1/</link>
        <pubDate>Sat, 27 Sep 2025 00:00:00 +0000</pubDate>
        
        <guid>https://georgepaps.pages.dev/post/computervision1/</guid>
        <description>&lt;p&gt;This essay outlines some major developments in the field of computer vision,
beginning with Perceptron and progressing to more recent advances such as EfficientNet.&lt;/p&gt;
&lt;h2 id=&#34;perceptron-1957&#34;&gt;Perceptron (1957)
&lt;/h2&gt;&lt;p&gt;Our journey will start in the late 50s.
In 1957 Rosenblatt, an erudite psychologist,
conceived the earliest and simplest type of artificial neural network, the Perceptron.
The Perceptron functions as a simple classifier
that based on some inputs it outputs 0 or 1.
Its calculations are straightforward:
take the inputs,
calculate their weighted average,
add a parameter called bias,
and check the sign of the result.
If the result is greater or equal to zero the neuron outputs 1,
otherwise if the result is less than 0 it outputs 0.&lt;/p&gt;
&lt;p&gt;In mathematical notation the equation described above for four inputs is:&lt;/p&gt;
&lt;p&gt;$$
z = w_{1}*x_{1} + w_{2}*x_{2} + w_{3}*x_{3} + w_{4}*x_{4} + b \
$$
$$
\text{output:}\
$$
$$
\text{if } z&amp;gt;= 0 \to 1 \newline
\text{if } z &amp;lt; 0 \to 0
$$
or in condensed form $z$ can be calculated as:&lt;/p&gt;
&lt;p&gt;$$z=\sum_{i=1}^n w_{i}*x_i + b $$&lt;/p&gt;
&lt;p&gt;The calculations Perceptron performs seem and are simple.
&lt;strong&gt;They key contribution of Perceptron though,
lies not in its calculations,
but on its learning algorithm.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To get a better understanding of how Perceptron works,
let&amp;rsquo;s start with a simple house classification problem.
We want given the square meters, the number of rooms, the construction year,
the price, and an indicator of how expensive the area is,
to identify whether a house is a bargain or not.
Since Perceptron is a classifier
we can use it to help us identify bargains.
The problem statement mentioned above can be restated in the following way:
$$
z = w_{1}*x_{1} + w_{2}*x_{2} + w_{3}*x_{3} + w_{4}*x_{4} + w_{4}*x_{4} + b \
$$&lt;/p&gt;
&lt;p&gt;$$
\text{where:}
$$&lt;/p&gt;
&lt;p&gt;$$
x_{1} \text{: square meters of the house} \newline
x_{2} \text{: number of rooms} \newline
x_{3} \text{: construction year} \newline
x_{4} \text{: price} \newline
x_{5} \text{: area indicator} \newline
$$&lt;/p&gt;
&lt;p&gt;Now, if $z &amp;gt; 0$ we&amp;rsquo;ll say that the house is a bargain, otherwise it is not.&lt;/p&gt;
&lt;p&gt;In the problem statement there are five $x$ variables describing each house,
and  6 parameters $w_{1},w_{2},w_{3},w_{4},w_{5}, w_{6}$, and $b$
that affect the outcome.
These parameters,
when selected appropriately,
can result in the equation correctly identifying
whether a house is a bargain or not.
For the houses that are bargains
their weighted average plus b would be greater than zero
for the rest it will be less than zero.
But how do we decide what values these 6 parameters will take?&lt;/p&gt;
&lt;p&gt;The process of picking the appropriate parameters
for our Perceptron is called training.
For the training process to take place
we need some training examples.
that is some houses that we have values for the five values describing them
and we know whether they are a bargain or not.
Having these training examples we can tune the parameters
in order to classify a house as a bargain or not.
Here lies one of the main contributions of Perceptron.&lt;/p&gt;
&lt;h2 id=&#34;le-net-1998&#34;&gt;Le Net (1998)
&lt;/h2&gt;&lt;p&gt;French machine-learning heavyweight Yann LeCun introduced in 1998 LeNet5.
&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;alexnet-2012&#34;&gt;AlexNet (2012)
&lt;/h2&gt;&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;vgg-16-2015&#34;&gt;VGG-16 (2015)
&lt;/h2&gt;&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;resnet-2015&#34;&gt;ResNet (2015)
&lt;/h2&gt;&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;mobilenet-2017&#34;&gt;MobileNet (2017)
&lt;/h2&gt;&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;efficient-net-2019&#34;&gt;Efficient Net (2019)
&lt;/h2&gt;</description>
        </item>
        
    </channel>
</rss>
